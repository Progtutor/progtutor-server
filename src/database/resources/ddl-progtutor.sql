-- ##################### POSTGRES DDL PROGTUTOR ######################## --

CREATE DOMAIN email AS varchar
CHECK(VALUE ~ '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$');

-- ##################### starts tables ######################## --

-- drop table "user" cascade;
create table "user" (
    use_cod bigint not null generated by default as identity,
    use_email email not null,
	use_password varchar not null,
    use_created_at timestamp with time zone default current_timestamp not null,
    constraint user_use_cod_pkey primary key (use_cod),
    constraint user_use_email_ukey unique (use_email)
);

-- ##################### ends tables ######################## --



-- ##################### starts triggers ######################## --

create or replace function insert_user()
returns trigger as $$
begin
	new.use_password := sha256(new.use_password::bytea)::varchar;
	return new;
end;
$$ language plpgsql;
create trigger trg_insert_user
before insert on "user"
for each row
execute procedure insert_user();

create or replace function update_user()
returns trigger as $$
begin
  	if new.use_password not like '\\x%' then
		new.use_password := sha256(new.use_password::bytea)::varchar;
	end if;
	return new;
end;
$$ language plpgsql;
create trigger trg_update_user
before update on "user"
for each row
execute procedure update_user();

-- ##################### ends triggers ######################## --



-- ##################### starts functions ######################## --

create or replace function validate_user_access(fun_use_email varchar, fun_use_password varchar)
returns bigint as $$
begin
	return (select use_cod from "user"
	where use_email = fun_use_email and use_password = sha256(fun_use_password::bytea)::varchar limit 1);
end
$$ language 'plpgsql';

-- ##################### ends functions ######################## --



-- ##################### starts queries ######################## --

insert into "user" (use_email, use_password)
values ('wesley@progtutor.com', 'wesley'), ('monique@progtutor.com', 'monique');

-- ##################### ends queries ######################## --
